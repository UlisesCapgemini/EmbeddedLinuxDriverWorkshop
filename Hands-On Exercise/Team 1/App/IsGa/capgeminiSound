#!/bin/bash

#   capgeminiSound - A custom command for audio functionality
#
#   1. Support `--record` to record audio to a specified WAV audio file. The recording duration is automatically set to 5 seconds
#   2. Support `--play` to play the most recently recorded/played WAV audio file
#   3. Create directories automatically if they don't exist
#   4. Store the last WAV audio file path for convenient replay
#
#   Author: isael.garcia@capgemini.com

VERSION="1.1"
CONFIG_DIR="$HOME/.config/capgeminiSound"
LAST_FILE_PATH="$CONFIG_DIR/last_file"
RECORDING_DURATION=5	# Fixed recording duration in seconds

# Create config directory if it doesn't exist
mkdir -p "$CONFIG_DIR"

# Function to display help
show_help() {
    echo "capgeminiSound - Capgemini Sound Utility v$VERSION"
    echo "Usage: capgeminiSound [OPTIONS] [FILE]"
    echo ""
    echo "Options:"
    echo "  -p, --play [FILE]       Play WAV audio file. If no WAV audio file specified, plays the last recorded/played WAV audio file"
    echo "  -r, --record FILE       Record audio to the specified WAV audio file (automatically records for $RECORDING_DURATION seconds)"
    echo "  -h, --help              Display this help message"
    echo ""
    echo "Examples:"
    echo "  capgeminiSound --record /path/to/capgeminiSounds/newRecording.wav"
    echo "  capgeminiSound --play"
    echo "  capgeminiSound --play /path/to/capgeminiSounds/sound.wav"
    echo ""
    echo "Notes:"
    echo "Creates directories automatically if they don't exist"
}

# Function to check dependencies
check_dependencies() {
    local missing_deps=()
    
    # Check for playback dependencies (ALSA)
    if ! command -v aplay &> /dev/null; then
        missing_deps+=("aplay (for playback)")
    fi

    # Check for recording dependencies (ALSA)
    if ! command -v arecord &> /dev/null; then
        missing_deps+=("arecord (for recording)")
    fi
    
    # If dependencies are missing, show error and installation instructions
    if [ ${#missing_deps[@]} -gt 0 ]; then
        echo "Error: Missing required dependencies:"
        for dep in "${missing_deps[@]}"; do
            echo "  - $dep"
        done
        echo ""
        echo "Please install with:"
        echo "  sudo apt-get install alsa-utils"
        exit 1
    fi
}

# Function to save last used file
save_last_file() {
    local file="$1"
    echo "$file" > "$LAST_FILE_PATH"
}

# Function to get last used file
get_last_file() {
    if [ -f "$LAST_FILE_PATH" ]; then
        cat "$LAST_FILE_PATH"
    else
        echo ""
    fi
}

# Function to play sound
play_sound() {
    local file="$1"
    
    # If no file specified, use the last one
    if [ -z "$file" ]; then
        file=$(get_last_file)
        if [ -z "$file" ]; then
            echo "Error: No file specified and no previous file found."
            echo "Please specify a file to play or use --record first."
            exit 1
        fi
    fi
    
    if [ ! -f "$file" ]; then
        echo "Error: File '$file' not found."
        exit 1
    fi
    
    echo "Playing: $file"
    echo ""
    
    # Determine file type and use appropriate player
    case "${file,,}" in
        *.wav)
            if command -v aplay &> /dev/null; then
                aplay -q "$file"
            else
                echo "Error: aplay is required to play WAV files."
                exit 1
            fi
            ;;
        *)
            echo "Error: Unsupported file format. Supported formats are: WAV"
            exit 1
            ;;
    esac
    
    # Save this file as the last used file
    save_last_file "$file"
}

# Function to record sound
record_sound() {
    local file="$1"
    
    if [ -z "$file" ]; then
        echo "Error: No output file specified for recording."
        echo "Usage: capgeminiSound --record FILE"
        exit 1
    fi
    
    # Create directory if it doesn't exist
    local dir=$(dirname "$file")
    if [ ! -d "$dir" ]; then
        mkdir -p "$dir"
        if [ $? -ne 0 ]; then
            echo "Error: Failed to create directory: $dir"
            exit 1
        fi
        echo "Created directory: $dir"
    fi
    
    # Check file extension (.wav)
    if [[ "${file,,}" != *.wav ]]; then
        echo "Error: Recording is only supported in WAV format."
        exit 1
    fi
    
    echo "Recording to: $file"
    echo "Recording for $RECORDING_DURATION seconds..."
    echo ""

    # Record for exactly 5 seconds using the -d parameter
    arecord -f cd -t wav -d $RECORDING_DURATION "$file"
    
    if [ $? -eq 0 ]; then
        echo "Recording saved to: $file"
        # Save this file as the last used file
        save_last_file "$file"
    else
        echo "Error: Recording failed."
        exit 1
    fi
}

# Main logic
check_dependencies

# Parse arguments
if [ $# -eq 0 ]; then
    # show simplified usage message instead of full help
    echo "Usage: capgeminiSound [OPTIONS] [FILE]..."
    echo "Try 'capgeminiSound --help' for more information."
    exit 1 # exit code 1 to indicate improper usage (standard practice)
fi

while [ $# -gt 0 ]; do
    case "$1" in
        -p | --play)
            if [ -z "$2" ] || [[ "$2" == --* ]]; then
                play_sound ""
            else
                play_sound "$2"
                shift
            fi
            shift
            ;;
        -r | --record)
            if [ -z "$2" ]; then
                echo "Error: No file specified for recording."
                exit 1
            fi
            record_sound "$2"
            shift 2
            ;;
        -h | --help)
            show_help
            exit 0
            ;;
        *)
            echo "Error: Unknown option '$1'"
            echo "Try 'capgeminiSound --help' for more information."
            exit 1
            ;;
    esac
done

exit 0
